---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: allow-user-app1
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: istio-ingressgateway
  action: ALLOW
  rules:
  - to:
    - operation:
        hosts: ["app1.example.com:31694", "app1.example.com:32505"]
    when:
      - key: request.auth.claims[role]
        values: ["company1"]

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  namespace: istio-system
  name: remote-hello-vsvc
spec:
  hosts:
  - "app1.example.com"
  gateways:
  - hello-gateway
  http:
  - route:
    - destination:
        host: httpbin.bar.cluster2
        port:
          number: 8000
---

apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: httpbin-bar
spec:
  hosts:
  # DNS name selected for the service
  - httpbin.bar.cluster2
  # Treat remote cluster services as part of the service mesh
  # as all clusters in the service mesh share the same root of trust.
  location: MESH_INTERNAL
  ports:
  - name: tcp
    number: 8000
    protocol: TCP
  resolution: DNS
  addresses:
  # the IP address to which httpbin.bar.cluster2 will resolve to
  # must be unique for each remote service, within a given cluster.
  # This address need not be routable. Traffic for this IP will be captured
  # by the sidecar and routed appropriately.
  - 240.0.0.2
  endpoints:
  # This is the routable address of the ingress gateway in cluster2 that
  # sits in front of sleep.foo service. Traffic from the sidecar will be
  # routed to this address.
  - address: 192.168.121.187
    ports:
      tcp: 31211


